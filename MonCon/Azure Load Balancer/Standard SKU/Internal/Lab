@secure()
param vmAdminPassword string
param location string = resourceGroup().location
param vnetName string = 'myVnet'
param lbName string = 'myInternalLB'
param vmAdminUsername string = 'azureuser'

// Create VNET
resource vnet 'Microsoft.Network/virtualNetworks@2021-08-01' = {
  name: vnetName
  location: location
  properties: {
    addressSpace: {
      addressPrefixes: [
        '10.0.0.0/16'
      ]
    }
    subnets: [
      {
        name: 'subnet1'
        properties: {
          addressPrefix: '10.0.1.0/24'
        }
      }
    ]
  }
}

// Internal Load Balancer
resource lb 'Microsoft.Network/loadBalancers@2021-08-01' = {
  name: lbName
  location: location
  properties: {
    sku: {
      name: 'Standard'
    }
    frontendIPConfigurations: [
      {
        name: 'frontend'
        properties: {
          privateIPAllocationMethod: 'Dynamic'
          subnet: {
            id: vnet.properties.subnets[0].id
          }
        }
      }
    ]
    backendAddressPools: [
      {
        name: 'backendPool'
      }
    ]
    loadBalancingRules: [
      {
        name: 'brokenRule'
        properties: {
          frontendIPConfiguration: {
            id: resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'lbName', 'frontend')
          }
          backendAddressPool: {
            id: resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'lbName', 'backend')
          }
          protocol: 'Tcp'
          frontendPort: 80
          backendPort: 8080 // Misconfigured rule
          enableFloatingIP: false
        }
      }
    ]
    probes: [
      {
        name: 'misconfiguredProbe'
        properties: {
          protocol: 'Tcp'
          port: 443 // Misconfigured probe
          intervalInSeconds: 5
          numberOfProbes: 2
        }
      }
    ]
  }
}

// Symbolic references for the nested properties
resource lb_frontendIPConfig 'Microsoft.Network/loadBalancers/frontendIPConfigurations@2021-08-01' = {
  parent: lb
  name: 'frontend'
}

resource lb_backendPool 'Microsoft.Network/loadBalancers/backendAddressPools@2021-08-01' = {
  parent: lb
  name: 'backendPool'
}

// Backend VM with IIS
resource backendNIC 'Microsoft.Network/networkInterfaces@2021-08-01' = {
  name: 'backendNIC'
  location: location
  properties: {
    ipConfigurations: [
      {
        name: 'ipConfig1'
        properties: {
          subnet: {
            id: vnet.properties.subnets[0].id
          }
          privateIPAllocationMethod: 'Dynamic'
          loadBalancerBackendAddressPools: [
            {
              id: lb_backendPool.id
            }
          ]
        }
      }
    ]
  }
}

resource backendVM 'Microsoft.Compute/virtualMachines@2022-03-01' = {
  name: 'backendVM'
  location: location
  properties: {
    hardwareProfile: {
      vmSize: 'Standard_B1s'
    }
    osProfile: {
      computerName: 'backendVM'
      adminUsername: vmAdminUsername
      adminPassword: vmAdminPassword
      customData: '''
<powershell>
  Install-WindowsFeature -Name Web-Server
</powershell>
'''
    }
    storageProfile: {
      imageReference: {
        publisher: 'MicrosoftWindowsServer'
        offer: 'WindowsServer'
        sku: '2019-Datacenter'
        version: 'latest'
      }
      osDisk: {
        createOption: 'FromImage'
      }
    }
    networkProfile: {
      networkInterfaces: [
        {
          id: backendNIC.id
        }
      ]
    }
  }
}

// Test VM
resource testNIC 'Microsoft.Network/networkInterfaces@2021-08-01' = {
  name: 'testNIC'
  location: location
  properties: {
    ipConfigurations: [
      {
        name: 'ipConfig1'
        properties: {
          subnet: {
            id: vnet.properties.subnets[0].id
          }
          privateIPAllocationMethod: 'Dynamic'
        }
      }
    ]
  }
}

resource testVM 'Microsoft.Compute/virtualMachines@2022-03-01' = {
  name: 'testVM'
  location: location
  properties: {
    hardwareProfile: {
      vmSize: 'Standard_B1s'
    }
    osProfile: {
      computerName: 'testVM'
      adminUsername: vmAdminUsername
      adminPassword: vmAdminPassword
    }
    storageProfile: {
      imageReference: {
        publisher: 'Canonical'
        offer: 'UbuntuServer'
        sku: '18.04-LTS'
        version: 'latest'
      }
      osDisk: {
        createOption: 'FromImage'
      }
    }
    networkProfile: {
      networkInterfaces: [
        {
          id: testNIC.id
        }
      ]
    }
  }
}
